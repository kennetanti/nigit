

def intcrapto(thenum):
	if thenum == '0':
		return "+[]"
	output = []
	for place in range(len(thenum),0,-1):
		digit = len(thenum)-place
		if thenum[digit]=='0':
			continue
		
		if place-1 == 0:
			exponent = "+[]"
		else:
			exponent = "+!![]"*(place-1)
			
		dig = "+!![]"*int(thenum[digit])
		output += ["("+dig+")*(0xa**("+exponent+"))"]
	return "+".join(output)

def crapto(thestring):
    #letters / numbers
    symbols = {
        'a': '((!!+[]+"")[+!![]])',
        'b': '((({})+"")[(+!![])+(+!![])])',
        'c': '((({})+"")[(+!![])+(+!![])+(+!![])+(+!![])+(+!![])])',
        'd': '((({})[""]+"")[(+!![])+(+!![])])',
        'e': '((!!+[]+"")[(+!![])+(+!![])+(+!![])+(+!![])])',
        'f': '((!!+[]+"")[+[]])',
        #'g': '"\\x67"',
        #'h': '"\\x68"',
        'i': '((+!![]/+[]+"")[(+!![])+(+!![])+(+!![])])',
        'j': '((({})+"")[(+!![])+(+!![])+(+!![])])',
        #'k': '"\\x6B"',
        'l': '((!!+[]+"")[(+!![])+(+!![])])',
        #'m': '"\\x6D"',
        'n': '((+!![]/+[]+"")[+!![]])',
        'o': '((({})+"")[+!![]])',
        #'p': '"\\x70"',
        #'q': '"\\x71"',
        'r': '((!+[]+"")[+!![]])',
        's': '((!!+[]+"")[(+!![])+(+!![])+(+!![])])',
        't': '((!+[]+"")[+[]])',
        'u': '((!+[]+"")[(+!![])+(+!![])])',
        'v':
        '([][((!!+[]+"")[+[]])+((+!![]/+[]+"")[(+!![])+(+!![])+(+!![])])+((!!+[]+"")[(+!![])+(+!![])])+((!!+[]+"")[(+!![])+(+!![])])]+"")[(((+!![])+(+!![]))*((+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])))+((+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![]))]',
        #'w': '"\\x77"',
        #'x': "'x'",
        'y':
        '((+!![]/+[]+"")[(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])])',
        #'z': '"\\x7A"',
        #'A': '"\\x41"',
        #'B': '"\\x42"',
        #'C': '"\\x43"',
        #'D': '"\\x44"',
        #'E': '"\\x45"',
        #'F': '"\\x46"',
        'G':
        '((({*""(){}})[""]()+"")[((+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![]))])',
        #'H': '"\\x48"',
        'I': '((+!![]/+[]+"")[+[]])',
        #'J': '"\\x4A"',
        #'K': '"\\x4B"',
        #'L': '"\\x4C"',
        #'M': '"\\x4D"',
        'N': '((+[]/+[]+"")[+[]])',
        'O':
        '((({})+"")[(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])])',
        #'P': '"\\x50"',
        #'Q': '"\\x51"',
        #'R': '"\\x52"',
        #'S': '"\\x53"',
        #'T': '"\\x54"',
        #'U': '"\\x55"',
        #'V': '"\\x56"',
        #'W': '"\\x57"',
        #'X': '"\\x58"',
        #'Y': '"\\x59"',
        #'Z': '"\\x5A"',
        #"(": "'('",
        #")": "')'",
        #"{": "'{'",
        #"}": "'}'",
        #"[": "'['",
        #"]": "']'",
        #".": "'.'",
        #";": "';'",
        #"@": "'@'",
        #"*": "'*'",
        #'"': "'\"'",
        #"/": "'/'",
        #":": "':'",
        #",": "','",
        #"'": '"\'"',
        #"=": "'='",
        #">": "'>'",
        #"<": "'<'",
        #"!": "'!'",
        #"$": "'$'",
        #"_": "'_'",
        #"#": "'#'",
        #"+": "'+'",
        "-": '(~[]+"")[+![]]',
        #"%": "'%'",
        #" ": "' '",
        #"?": "'?'",
        #"|": "'|'",
        #"^": "'^'",
        #"&": "'&'",
        #"~": "'~'",
        #"\\": "'\\\\'",
        "0": "(+[])",
        "1": "(+!![])",
        "2": "((+!![])+(+!![]))",
        "3": "((+!![])+(+!![])+(+!![]))",
        "4": "((+!![])+(+!![])+(+!![])+(+!![]))",
        "5": "((+!![])+(+!![])+(+!![])+(+!![])+(+!![]))",
        "6": "((+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![]))",
        "7": "((+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![]))",
        "8":
        "((+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![]))",
        "9":
        "((+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![])+(+!![]))"
    }
    transformed = []
    for i in range(len(thestring)):
        if thestring[i] not in symbols.keys():
            transformed.append('"\\'+format(ord(thestring[i]), "#04x")[1:]+'"+')
        else:
            transformed.append(symbols[thestring[i]] + "+")
    return "".join(transformed).strip("+").replace('"+"\\x', '\\x')
